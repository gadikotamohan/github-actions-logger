name: Real-time Log Shipper
on:
  workflow_run:
    workflows: ["CI Worker"]
    types:
      - requested

permissions:
  actions: read

jobs:
  log-shipper:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get All Job IDs
        id: get_job_ids
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_ID: ${{ github.event.workflow_run.id }}
        run: |
          echo "Debugging: RUN_ID is $RUN_ID"
          # Get all job database IDs for the triggering workflow run.
          # We use --json jobs to get the full job objects, then jq to extract all databaseIds.
          ALL_JOB_IDS=$(gh run view $RUN_ID --json jobs -q '.jobs[] | .databaseId')
          echo "Debugging: Extracted ALL_JOB_IDS are $ALL_JOB_IDS"
          echo "all_job_ids=$ALL_JOB_IDS" >> $GITHUB_OUTPUT

      - name: Fetch and Stream Final Logs for All Jobs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALL_JOB_IDS: ${{ steps.get_job_ids.outputs.all_job_ids }}
          LOG_SECRET: ${{ secrets.LOG_SECRET }}
          RUN_ID: ${{ github.event.workflow_run.id }}
        run: |
          echo "Found job IDs: $ALL_JOB_IDS"
          echo "Waiting for the CI Worker run to complete..."

          # Poll the overall run status until it's completed
          while gh run view "$RUN_ID" --json status -q '.status' | grep -q 'in_progress'; do
            echo "CI Worker run is still in progress. Displaying high-level status..."
            LOG_CONTENT=$(gh run view "$RUN_ID") # Get summary status, similar to gh run watch
            echo "--- Run Status Update ---"
            echo "$LOG_CONTENT"
            # curl -X POST \
            #      -H "X-GitHub-Run-ID: $RUN_ID" \
            #      -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
            #      -d "$LOG_CONTENT" \
            #      http://your-log-server.com/run_status_updates # You might need a separate endpoint for status updates
            sleep 15 # Adjust this value to control polling frequency. 
          done

          echo "CI Worker run has completed. Fetching and sending final logs for all jobs..."

          # Loop through each job ID and send its final log
          for JOB_ID in $ALL_JOB_IDS; do
            echo "--- Processing Final Log for Job ID: $JOB_ID ---"
            LOG_CONTENT=$(gh run view "$RUN_ID" --job "$JOB_ID" --log)
            # SIGNATURE=$(echo -n "$LOG_CONTENT" | openssl dgst -sha256 -hmac "$LOG_SECRET" | sed 's/^.* //')
            echo "--- Final Log Content for Job $JOB_ID ---"
            echo "$LOG_CONTENT"
            # curl -X POST \
            #      -H "X-GitHub-Job-ID: $JOB_ID" \
            #      -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
            #      -d "$LOG_CONTENT" \
            #      http://your-log-server.com/logs
            echo "Log shipping complete for Job $JOB_ID."
          done

          echo "All job logs processed. Log shipping complete."